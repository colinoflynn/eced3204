/*
 * ButtonExamples.c
 *
 * Created: 05/02/2015 10:02:21 AM
 *  Author: colin
 */ 


#include <avr/io.h>
#include <util/delay.h>

void button0(void)
{
	
	//PORTD.7 is Output
	//PORTD.4 is Input
	DDRD = 1<<7;
	
	//Turn pull-up on PORTD.4
	PORTB = 1<<4;
	
	while(1){
		//Check state of push-button
		if(PINB & (1<<4)){			
			//Turn on PORTD.7
			PORTD = 1<<7;			
		} else {			
			//Turn off PORTD.7
			PORTD &= ~(1<<7);		
		}		
	}	
}

void step1(void)
{
	DDRD = 1<<7;
	
	DDRB = 1<<0 | 1<<1 | 1<<2 | 1<<3;
	PORTB = 1<<4 | 1<<5 | 1<<6 | 1<<7;
	
	while(1)
	{
		if(PINB & (1<<4)){
			PORTD = 1<<7;
			} else {
			PORTD = 0;
		}
	}	
}

void step2(void)
{
	DDRD = 1<<7;
	
	DDRB = 1<<0 | 1<<1 | 1<<2 | 1<<3;
	PORTB = 1<<4 | 1<<5 | 1<<6 | 1<<7;
	
	PORTB |= 1<<1 | 1<<2 | 1<<3;
	
	while(1)
	{
		if(PINB & (1<<4)){
			PORTD = 1<<7;
			} else {
			PORTD = 0;
		}
	}
}

void step3(void)
{
	DDRD = 1<<7;	
	DDRB = 1<<0 | 1<<1 | 1<<2 | 1<<3;
	PORTB = 1<<4 | 1<<5 | 1<<6 | 1<<7;	
	PORTB |= 1<<1 | 1<<2 | 1<<3;
	
	unsigned char ledstate = 1;
	unsigned char buttonstate = 0;
	unsigned char lastbuttonstate = 0;
	
	while(1)
	{
		buttonstate = PINB & (1<<4);
		
		if ((buttonstate != lastbuttonstate) && (buttonstate == 0)){
			ledstate ^= 1;			
		}
		
		lastbuttonstate = buttonstate;
		
		if(ledstate) {			
			PORTD = 1<<7;
		} else {
			PORTD = 0;
		}
	}
}

unsigned char read_button(unsigned char row, unsigned char col)
{
	unsigned char buttonstate = 0;
	
	//Set row-col low
	DDRB |= 1<<row;
	
	//We need to wait for this to propagate before reading!
	_delay_us(10);
	
	if((PINB & (1<<(col+4))) == 0){
		_delay_ms(20);
		if((PINB & (1<<(col+4))) == 0){
			buttonstate = 1;	
		}		
	}
		
	DDRB &= ~(1<<row);
	
	return buttonstate;
}

void step4(void)
{
	DDRD = 1<<7;
	PORTB = 0xF0;
	
	unsigned char ledstate = 1;
	unsigned char buttonstate;
	unsigned char lastbuttonstate = 0;
	
	while(1)
	{
		buttonstate = read_button(0,0);
		
		if ((buttonstate != lastbuttonstate) && (buttonstate)){
			ledstate ^= 1;
		}
		
		lastbuttonstate = buttonstate;
		
		if(ledstate) {
			PORTD = 1<<7;
		} else {
			PORTD = 0;
		}
	}
}

unsigned char decode_buttons(void)
{
	unsigned char row, col;
	unsigned char button = 0xff;
	
	for(row = 0; row < 4; row++){
		for(col = 0; col < 4; col++){
			if(read_button(row, col)){
				button = row | (col << 4);
			}
		}
	}
	
	
	
	switch(button){
		case (0<<4) | 0: return 0x0F;
		case (0<<4) | 1: return 0x0E;
		case (0<<4) | 2: return 0x0D;
		case (0<<4) | 3: return 0x0C;
		case (1<<4) | 0: return 0x0B;
		case (1<<4) | 1: return 0x0A;
		case (1<<4) | 2: return 0x09;
		case (1<<4) | 3: return 0x08;
		case (2<<4) | 0: return 0x07;
		case (2<<4) | 1: return 0x06;
		case (2<<4) | 2: return 0x05;
		case (2<<4) | 3: return 0x04;
		case (3<<4) | 0: return 0x03;
		case (3<<4) | 1: return 0x02;
		case (3<<4) | 2: return 0x01;
		case (3<<4) | 3: return 0x00;
		default: return 0xFF;
	}
}

void step5(void)
{
	DDRD = 1<<7;
	PORTB = 0xF0;
	
	unsigned char ledstate = 1;
	unsigned char buttonstate;
	unsigned char lastbuttonstate = 0;
	
	while(1)
	{
		if (decode_buttons() == 0x09){
			PORTD = 1<<7;
		} else {
			PORTD = 0;
		}
	}
}

void step6(void)
{
	DDRD = 1<<7;
	PORTB = 0xF0;
	
	unsigned char ledstate = 1;
	unsigned char buttonstate;
	unsigned char lastbuttonstate = 0;
	
	unsigned char state = 0;
	
	while(1)
	{
		if(state == 0) {
			if (decode_buttons() == 1){
				state = 1;
			}
		} else if (state == 1) {
			if (decode_buttons() == 2){
				state = 2;
			}
		} else if (state == 2) {
			if (decode_buttons() == 3){
				if (decode_buttons() == 0xFF){
					state = 3;
				}
			}
		} else {
			if (decode_buttons() != 0xFF){
				state = 0;
			}
		}
		
		if (state == 3){
			PORTD = 1<<7;
		} else {
			PORTD = 0;
		}
	}
}

int main(void)
{
	step3();
}